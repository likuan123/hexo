<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://hexo.akuan.win/atom.xml" rel="self"/>
  
  <link href="http://hexo.akuan.win/"/>
  <updated>2024-05-29T13:30:23.182Z</updated>
  <id>http://hexo.akuan.win/</id>
  
  <author>
    <name>akuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cloudflare + V2rayN实现科学上网</title>
    <link href="http://hexo.akuan.win/2024/05/27/cloudflare/"/>
    <id>http://hexo.akuan.win/2024/05/27/cloudflare/</id>
    <published>2024-05-26T16:00:00.000Z</published>
    <updated>2024-05-29T13:30:23.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>免费在<code>Cloudflare</code>上面通过部署<code>Worker</code>或者<code>Pages</code>，来创建一个免费VLESS节点，看YouTuBe和Netfilex的4K视频甚至可以访问chatgpt和gemini等双向被墙的网页</p><p>1.zizifn 大佬的一个开源项目 edgetunnel ，Github项目地址：<a href="https://github.com/zizifn/edgetunnel">https://github.com/zizifn/edgetunnel</a></p><p>2.cmliu大佬在巨人的肩膀上二次创作，简化到通过上传<code>Pages</code>文件，GitHub 地址：<a href="https://github.com/cmliu/edgetunnel">https://github.com/cmliu/edgetunnel</a> (墙裂建议此项)</p><p>3.v2rayN安装，添加并更新订阅，设置活跃服务器，科学浏览大功告成！</p><h2 id="1-zizifn项目教程"><a href="#1-zizifn项目教程" class="headerlink" title="1.zizifn项目教程"></a>1.zizifn项目教程</h2><p>优点：全过程自己参与，步骤清晰<br>缺点：步骤繁琐，网速不理想需要使用优选IP，在V2rayN更换IP</p><h4 id="1-1-注册Cloudflare账号"><a href="#1-1-注册Cloudflare账号" class="headerlink" title="1.1 注册Cloudflare账号"></a>1.1 注册Cloudflare账号</h4><p>注册地址：<a href="https://dash.cloudflare.com/sign-up">https://dash.cloudflare.com/sign-up</a></p><h4 id="1-2-购买注册域名"><a href="#1-2-购买注册域名" class="headerlink" title="1.2 购买注册域名"></a>1.2 购买注册域名</h4><p>2.1 建议直接在<code>Cloudflare</code>内的<code>域注册</code>-<code>注册域</code>购买一个域名，比如我的akuan.win,花了90元买了3年，好处是直接就可以在<code>Cloudflare</code>中进行托管<br>2.2 也可以在其他Domain域名网站购买，再托管到Cloudflare，注意的是，第一年超级便宜，后期renew续费很贵！！</p><h4 id="1-3-Worker-部署-VLESS"><a href="#1-3-Worker-部署-VLESS" class="headerlink" title="1.3 Worker 部署 VLESS"></a>1.3 Worker 部署 VLESS</h4><p>1.3.1 Cloudflare 首页，点击<code>Workers 和 Pages</code> - <code>创建应用程序</code> - 创建<code>Worker</code> - 自定义名称例如<code>vless</code>，然后点击<code>部署</code><br>1.3.2 部署成功页面点击<code>编辑代码</code>，清空原有代码，复制 <a href="https://github.com/V2RaySSR/Free-VLESS/blob/main/worker-vless.js">https://github.com/V2RaySSR/Free-VLESS/blob/main/worker-vless.js</a> 中的代码到Cloudflare<br>1.3.3 在 <a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a> 生成随机UUID，复制其中一行，例如:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">2ed6baf1-1f05-4826-9122-b4bc1ee28585<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改代码中<code>let userID</code>的值<br>1.3.4 点击右上角蓝色的<code>部署</code></p><h4 id="1-4-设置自定义域"><a href="#1-4-设置自定义域" class="headerlink" title="1.4 设置自定义域"></a>1.4 设置自定义域</h4><p>1.4.1 返回Workers中<code>vless</code>项目里，点击<code>设置</code>-<code>触发器</code>-<code>添加自定义域</code>，输入没使用过的已经托管在CF上面的，二级域名(例如<code>vless.akuan.win</code>)<br>1.4.2 输入完成，若是输入框变为绿色，证明格式正确！点击添加自定义域！<br>1.4.3 域证书会显示：正在初始化，等待证书生效，或是直接访问 该域名，网页显示有内容，证明部署完毕！</p><h4 id="1-5获得订阅链接"><a href="#1-5获得订阅链接" class="headerlink" title="1.5获得订阅链接"></a>1.5获得订阅链接</h4><p>浏览器访问<code>https://二级域名/UUID</code>，例如：<code>https://vless.akuan.win/2ed6baf1-1f05-4826-9122-b4bc1ee28585</code>,即可看到订阅地址</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vless://2ed6baf1-1f05-4826-9122-b4bc1ee28585···com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-cmliu项目教程-建议"><a href="#2-cmliu项目教程-建议" class="headerlink" title="2.cmliu项目教程(建议)"></a>2.cmliu项目教程(建议)</h2><p>优点：简单，仅需上传Pages文件，V2rayN中自动优选IP</p><h4 id="2-1-下载源文件"><a href="#2-1-下载源文件" class="headerlink" title="2.1 下载源文件"></a>2.1 下载源文件</h4><p>下载作者的<code>Pages</code>文件：<a href="https://raw.githubusercontent.com/cmliu/edgetunnel/main/worker.zip">https://raw.githubusercontent.com/cmliu/edgetunnel/main/worker.zip</a></p><h4 id="2-2-Pages-部署-VLESS"><a href="#2-2-Pages-部署-VLESS" class="headerlink" title="2.2 Pages 部署 VLESS"></a>2.2 Pages 部署 VLESS</h4><p>Cloudflare 首页，点击<code>Workers 和 Pages</code>-<code>创建应用程序</code>-<code>Pages</code>-<code>上传资产</code> - 项目创建名字列如<code>vlesstest</code>，点击<code>创建项目</code> - 上传刚才下载下来的worker.zip - 点击<code>部署站点</code></p><h4 id="2-3-添加UUID变量"><a href="#2-3-添加UUID变量" class="headerlink" title="2.3 添加UUID变量"></a>2.3 添加UUID变量</h4><p>回到<code>vlesstest</code>项目,找到<code>设置</code> – <code>环境变量</code> – <code>添加变量</code>，变量名称：<code>UUID</code> ，变量值为刚才生成的 <code>UUID</code> 或在前面1.3.3中 ，点击保存！</p><h4 id="2-4-重新部署-Pages"><a href="#2-4-重新部署-Pages" class="headerlink" title="2.4 重新部署 Pages"></a>2.4 重新部署 Pages</h4><p>回到<code>vlesstest</code>项目，找到<code>部署</code>，点击下面的<code>创建新部署</code>，再次上传刚才的worker.zip文件，保存并部署<br>这样，我们点击上图中的 访问站点，若是有内容出现，证明部署成功</p><h4 id="2-5获得订阅链接"><a href="#2-5获得订阅链接" class="headerlink" title="2.5获得订阅链接"></a>2.5获得订阅链接</h4><p>我们可以访问 https://域/UUID ，来查看我们的节点,例如<code>https://vlesstest-2n4.pages.dev/7a1a374f-286f-4807-9756-ee3f90227bb0</code><br>参照1.4 加入一个自定义域，比如<code>https://vless.akuan.win</code>即可轻松访问,后面加入刚刚的UUID，例如：<code>https://vless.akuan.win/2ed6baf1-1f05-4826-9122-b4bc1ee28585</code>,即可看到vless://2ed6baf1-1f05-4826-9122-b4bc1ee28585···com的节点信息</p><h2 id="3-v2rayN"><a href="#3-v2rayN" class="headerlink" title="3.v2rayN"></a>3.v2rayN</h2><p>windows: <a href="https://github.com/2dust/v2rayN/releases">https://github.com/2dust/v2rayN/releases</a><br>安卓(v2rayNG): <a href="https://github.com/2dust/v2rayNG/releases">https://github.com/2dust/v2rayNG/releases</a> ，不知道下载哪个时，请直接下载带 arm64-v8a.apk<br>IOS: 使用国外账号，App Store 搜 Shadowrocket</p><h4 id="3-1-下载"><a href="#3-1-下载" class="headerlink" title="3.1 下载"></a>3.1 下载</h4><p>下载地址: <a href="https://github.com/2dust/v2rayN/releases">https://github.com/2dust/v2rayN/releases</a> ，第一次安装建议下载带内核版本<code>v2rayN-With-Core.zip</code>，并解压缩</p><h4 id="3-2-安装Microsoft-NET-8-0-Desktop-Runtime"><a href="#3-2-安装Microsoft-NET-8-0-Desktop-Runtime" class="headerlink" title="3.2 安装Microsoft .NET 8.0 Desktop Runtime"></a>3.2 安装Microsoft .NET 8.0 Desktop Runtime</h4><p>V2rayN的代码需要.NET 8.0以上支持，下载地址:<a href="https://dotnet.microsoft.com/zh-cn/download/dotnet/8.0">https://dotnet.microsoft.com/zh-cn/download/dotnet/8.0</a></p><h4 id="3-3-添加订阅"><a href="#3-3-添加订阅" class="headerlink" title="3.3 添加订阅"></a>3.3 添加订阅</h4><p>管理员运行<code>v2rayN.exe</code> - <code>订阅分组</code> - <code>订阅分组设置</code> - <code>添加</code> - 别名随便填，可选地址为获得的订阅地址，例如：<code>vless://2ed6baf1-1f05-4826-9122-b4bc1ee28585···com</code> - <code>确定</code></p><h4 id="3-4-连接节点"><a href="#3-4-连接节点" class="headerlink" title="3.4 连接节点"></a>3.4 连接节点</h4><p><code>订阅分组</code> - <code>更新全部订阅(不通过代理)</code> - <code>右键选择其中一个节点</code> - <code>设为活动服务器</code>或<code>选中按Enter键</code> - 最下方有个系统代理，选择<code>自动配置系统代理</code> - 路由选择 <code>V2-绕过大陆(Whitelist)</code></p><h3 id="脱离信息茧房，开启你的全球视野吧！！"><a href="#脱离信息茧房，开启你的全球视野吧！！" class="headerlink" title="脱离信息茧房，开启你的全球视野吧！！"></a>脱离信息茧房，开启你的全球视野吧！！</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言:&quot;&gt;&lt;/a&gt;前言:&lt;/h2&gt;&lt;p&gt;免费在&lt;code&gt;Cloudflare&lt;/code&gt;上面通过部署&lt;code&gt;Worker&lt;/code&gt;或者&lt;code&gt;Pages&lt;/co</summary>
      
    
    
    
    
    <category term="Cloudflare" scheme="http://hexo.akuan.win/tags/Cloudflare/"/>
    
    <category term="V2rayN" scheme="http://hexo.akuan.win/tags/V2rayN/"/>
    
    <category term="Cloudflare Worker" scheme="http://hexo.akuan.win/tags/Cloudflare-Worker/"/>
    
    <category term="Cloudflare Pages" scheme="http://hexo.akuan.win/tags/Cloudflare-Pages/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github Pages从零开始搭建个人博客</title>
    <link href="http://hexo.akuan.win/2024/05/26/0-ji-yu-github-cong-ling-kai-shi-da-jian-ge-ren-bo-ke/"/>
    <id>http://hexo.akuan.win/2024/05/26/0-ji-yu-github-cong-ling-kai-shi-da-jian-ge-ren-bo-ke/</id>
    <published>2024-05-26T02:15:35.700Z</published>
    <updated>2024-05-26T13:38:23.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大概流程：安装node-js-git-hexo框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例"><a href="#大概流程：安装node-js-git-hexo框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例" class="headerlink" title="大概流程：安装node.js,git,hexo框架,github ssh密钥，github代码仓，在GitHub pages上搭建个人博客.以下以windows为例"></a>大概流程：安装node.js,git,hexo框架,github ssh密钥，github代码仓，在GitHub pages上搭建个人博客.以下以windows为例</h2><h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>访问Node.js官方网站：<a href="https://nodejs.org/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E9%80%82%E5%90%88%E6%82%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E5%B9%B6%E6%8C%89%E7%85%A7%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%87%E7%A4%BA%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/，下载适合您操作系统的安装包，并按照安装程序的指示完成安装。</a></p><p>完成后，您可以通过以下命令来验证 Node.js 和 npm（Node包管理器）的安装是否成功：<br>管理员权限打开 <code>cmd</code> 或者 <code>powershell</code> </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这两个命令会输出已安装的 Node.js 和 npm 的版本号</p><h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h3><p>访问Git官方网站：<a href="https://git-scm.com/%EF%BC%8C%E8%BD%BD%E9%80%82%E5%90%88%E6%82%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E5%B9%B6%E6%8C%89%E7%85%A7%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%87%E7%A4%BA%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%85%E3%80%82">https://git-scm.com/，载适合您操作系统的安装包，并按照安装程序的指示完成安装。</a><br>完成后，您可以通过以下命令来验证 Git 的安装是否成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令会输出已安装的Git版本号</p><h3 id="3-安装hexo框架"><a href="#3-安装hexo框架" class="headerlink" title="3.安装hexo框架"></a>3.安装hexo框架</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-新建一个空文件夹，创建一个新的Hexo项目"><a href="#4-新建一个空文件夹，创建一个新的Hexo项目" class="headerlink" title="4.新建一个空文件夹，创建一个新的Hexo项目"></a>4.新建一个空文件夹，创建一个新的Hexo项目</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-生成静态文件"><a href="#5-生成静态文件" class="headerlink" title="5.生成静态文件"></a>5.生成静态文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g<span class="token comment"># 或</span>hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-启动本地服务预览"><a href="#6-启动本地服务预览" class="headerlink" title="6.启动本地服务预览"></a>6.启动本地服务预览</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span class="token comment"># 或</span>hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在浏览器输入：<code>127.0.0.1:4000</code>，即可看到：hexo 的默认 blog</p><h3 id="7-变更默认的Hexo-主题"><a href="#7-变更默认的Hexo-主题" class="headerlink" title="7.变更默认的Hexo 主题"></a>7.变更默认的Hexo 主题</h3><p>如果喜欢其他主题，可以在 <a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a> 挑选更换。<br>下载好后放在<code>themes</code>文件夹内，同时在 <code>_config.yml</code> 中的theme: 更改主题名<br>这里采用了主体： <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/</a></p><p>在根目录的<code>themes</code>目录下执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>原来有一个主题为：landscape，克隆完成后可以看到一个新的主题：hexo-theme-matery</p><h3 id="8-修改-config-yml"><a href="#8-修改-config-yml" class="headerlink" title="8.修改 _config.yml"></a>8.修改 _config.yml</h3><p>修改根目录下的配置文件 <code>_config.yml</code> ，替换：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> landscape<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>变更为：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-使主题生效"><a href="#9-使主题生效" class="headerlink" title="9.使主题生效"></a>9.使主题生效</h4><p>重新生成文件，并启动服务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再刷新浏览器可以看到崭新的页面：，如果没有变化ctrl+F5强制刷新</p><h3 id="10-配置本地SSH-Key"><a href="#10-配置本地SSH-Key" class="headerlink" title="10.配置本地SSH Key"></a>10.配置本地SSH Key</h3><p>生成新的SSH Key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your_email@youremail.com"</span><span class="token comment"># "your_email@youremail.com"为可更改注释</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>按回车键后，会提示您输入保存文件的路径。默认情况下，它会保存在 C:\Users\YourUsername.ssh\id_rsa。您可以直接按回车键使用默认路径。</p><p>再打开生成的公钥.pub 将内容复制到Github上去，或者输入下面命令获得刚刚生成的SSH Key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="11-把生成的SSH-Key添加到github"><a href="#11-把生成的SSH-Key添加到github" class="headerlink" title="11.把生成的SSH Key添加到github"></a>11.把生成的SSH Key添加到github</h3><p>Github账户，找到 <code>settings ---&gt; SSH and GPG keys</code>。new 一个新的SSH Key，并把刚刚生成的本地SSH Key复制进去</p><h3 id="12-安装-hexo-deployer-git-部署插件"><a href="#12-安装-hexo-deployer-git-部署插件" class="headerlink" title="12.安装 hexo-deployer-git 部署插件"></a>12.安装 hexo-deployer-git 部署插件</h3><p>在根目录下执行(不是git bash里)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="13-Github新建一个仓库-Create-a-new-repository"><a href="#13-Github新建一个仓库-Create-a-new-repository" class="headerlink" title="13.Github新建一个仓库(Create a new repository)"></a>13.Github新建一个仓库(Create a new repository)</h3><p>在Github新建一个仓库，仓库名例如<code>1234</code>，创建后会得到<code>SSH</code>值为 <code>git@github.com:likuan123/1234.git</code></p><h3 id="14-修改-config-yml"><a href="#14-修改-config-yml" class="headerlink" title="14.修改_config.yml"></a>14.修改_config.yml</h3><p>blog目录中的<code>_config.yml</code> 文件的 <code>deploy</code> 项需要修改：<br>初始为</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  type<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>增加或修改<code>repo</code>为 <code>SSH</code>值和<code>branch: master</code>,冒号后有空格，代码如下</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>likuan123/1234.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存修改</p><h3 id="15-部署到Github"><a href="#15-部署到Github" class="headerlink" title="15.部署到Github"></a>15.部署到Github</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo chexo g<span class="token comment"># 部署到服务上</span>hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意，如果出现无法上传，根据报错内容，主要有2个原因：<br>1.22端口被封，此时把<code>repo</code>的值改为 GitHub 上的<code>http</code>值，再不行改端口映射<br>2.secret问题，点击报错链接，在跳转的页面选择其中某一项，关闭即可</p><p>然后再重新输入上方代码即可</p><h3 id="16-尝试访问Github-Pages"><a href="#16-尝试访问Github-Pages" class="headerlink" title="16.尝试访问Github Pages"></a>16.尝试访问Github Pages</h3><p>浏览器输入：<a href="https://likuan123.github.io/1234">https://likuan123.github.io/1234</a> ，(可能需要翻墙)，即可出现自己的博客了</p><h3 id="17-GitHub-Pages-网址到个人域名解析-墙内建议"><a href="#17-GitHub-Pages-网址到个人域名解析-墙内建议" class="headerlink" title="17.GitHub Pages 网址到个人域名解析(墙内建议)"></a>17.GitHub Pages 网址到个人域名解析(墙内建议)</h3><p>1.在Github <code>1234</code>项目 的<code>Settings -- pages -- Custom domain</code> –输入自己的二级域名例如<code>1234.akuan.win</code></p><p>2.在域名托管网站，如<code>cloudflare</code>，DNS记录里，新建一个CNAME，名称1234，内容<code>likuan123.github.io</code>，保存</p><p>等几分钟既可以通过1234.akuan.win访问博客了</p><h3 id="保存代码-可选"><a href="#保存代码-可选" class="headerlink" title="保存代码(可选)"></a>保存代码(可选)</h3><p>将本地主目录推送到远程其他分支，保存代码。</p><p>因为发布的分支选的是master，所以每次发布都会影响，所以我们选择将所有的代码上传到其他分支。</p><p>比如我们新建一个分支 prd，以后都在prd分支上修改，新建文章，发布的时候会发布到master分支上，这样一来，编写与发布互不干扰了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大概流程：安装node-js-git-hexo框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例&quot;&gt;&lt;a href=&quot;#大概流程：安装node-js-git-hexo框架-github-ssh密钥</summary>
      
    
    
    
    
    <category term="Github Pages" scheme="http://hexo.akuan.win/tags/Github-Pages/"/>
    
    <category term="Hexo" scheme="http://hexo.akuan.win/tags/Hexo/"/>
    
    <category term="Markdown" scheme="http://hexo.akuan.win/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://hexo.akuan.win/2024/05/25/hello-world/"/>
    <id>http://hexo.akuan.win/2024/05/25/hello-world/</id>
    <published>2024-05-25T07:01:01.715Z</published>
    <updated>2024-05-25T07:01:01.715Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
