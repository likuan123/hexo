<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://hexo.akuan.win/atom.xml" rel="self"/>
  
  <link href="http://hexo.akuan.win/"/>
  <updated>2024-05-26T11:09:04.179Z</updated>
  <id>http://hexo.akuan.win/</id>
  
  <author>
    <name>akuan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于Github Pages + Hexo从零开始搭建个人博客</title>
    <link href="http://hexo.akuan.win/2024/05/26/0-ji-yu-github-cong-ling-kai-shi-da-jian-ge-ren-bo-ke/"/>
    <id>http://hexo.akuan.win/2024/05/26/0-ji-yu-github-cong-ling-kai-shi-da-jian-ge-ren-bo-ke/</id>
    <published>2024-05-26T02:15:35.700Z</published>
    <updated>2024-05-26T11:09:04.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="大概流程：通过安装node-js-git-hexo博客框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例"><a href="#大概流程：通过安装node-js-git-hexo博客框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例" class="headerlink" title="大概流程：通过安装node.js,git,hexo博客框架,github ssh密钥，github代码仓，在GitHub pages上搭建个人博客.以下以windows为例"></a>大概流程：通过安装node.js,git,hexo博客框架,github ssh密钥，github代码仓，在GitHub pages上搭建个人博客.以下以windows为例</h2><h3 id="1-安装Node-js"><a href="#1-安装Node-js" class="headerlink" title="1.安装Node.js"></a>1.安装Node.js</h3><p>访问Node.js官方网站：<a href="https://nodejs.org/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E9%80%82%E5%90%88%E6%82%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E5%B9%B6%E6%8C%89%E7%85%A7%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%87%E7%A4%BA%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%85%E3%80%82">https://nodejs.org/，下载适合您操作系统的安装包，并按照安装程序的指示完成安装。</a></p><p>完成后，您可以通过以下命令来验证Node.js和npm（Node包管理器）的安装是否成功：<br>管理员权限打开cmd或者powershell</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">-v</span><span class="token function">npm</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这两个命令会输出已安装的Node.js和npm的版本号</p><h3 id="2-安装Git"><a href="#2-安装Git" class="headerlink" title="2.安装Git"></a>2.安装Git</h3><p>访问Git官方网站：<a href="https://git-scm.com/%EF%BC%8C%E8%BD%BD%E9%80%82%E5%90%88%E6%82%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%EF%BC%8C%E5%B9%B6%E6%8C%89%E7%85%A7%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%8C%87%E7%A4%BA%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%85%E3%80%82">https://git-scm.com/，载适合您操作系统的安装包，并按照安装程序的指示完成安装。</a><br>完成后，您可以通过以下命令来验证Git的安装是否成功：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该命令会输出已安装的Git版本号</p><h3 id="3-安装hexo框架"><a href="#3-安装hexo框架" class="headerlink" title="3.安装hexo框架"></a>3.安装hexo框架</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="4-新建一个空文件夹，创建一个新的Hexo项目"><a href="#4-新建一个空文件夹，创建一个新的Hexo项目" class="headerlink" title="4.新建一个空文件夹，创建一个新的Hexo项目"></a>4.新建一个空文件夹，创建一个新的Hexo项目</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init<span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="5-生成静态文件"><a href="#5-生成静态文件" class="headerlink" title="5.生成静态文件"></a>5.生成静态文件</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo g<span class="token comment"># 或</span>hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="6-启动本地服务预览"><a href="#6-启动本地服务预览" class="headerlink" title="6.启动本地服务预览"></a>6.启动本地服务预览</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo s<span class="token comment"># 或</span>hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在浏览器输入：127.0.0.1:4000，即可看到：hexo的默认blog</p><h3 id="7-变更默认的Hexo-主题"><a href="#7-变更默认的Hexo-主题" class="headerlink" title="7.变更默认的Hexo 主题"></a>7.变更默认的Hexo 主题</h3><p>如果喜欢其他主题，可以在 <a href="https://hexo.io/themes/index.html">https://hexo.io/themes/index.html</a> 挑选更换。<br>下载好后放在<code>themes</code>文件夹内，同时在 <code>_config.yml</code> 中的theme: 更改主题名<br>这里采用了主体： <a href="https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/">https://blinkfox.github.io/2018/09/28/qian-duan/hexo-bo-ke-zhu-ti-zhi-hexo-theme-matery-de-jie-shao/</a></p><p>在根目录的themes目录下执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>原来有一个主题为：landscape，克隆完成后可以看到一个新的主题：hexo-theme-matery</p><h4 id="8-修改-config-yml"><a href="#8-修改-config-yml" class="headerlink" title="8.修改 _config.yml"></a>8.修改 _config.yml</h4><p>修改根目录下的配置文件 <code>_config.yml</code> ，替换：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> landscape<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>变更为：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Extensions</span><span class="token comment">## Plugins: https://hexo.io/plugins/</span><span class="token comment">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> hexo<span class="token punctuation">-</span>theme<span class="token punctuation">-</span>matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="9-使主题生效"><a href="#9-使主题生效" class="headerlink" title="9.使主题生效"></a>9.使主题生效</h4><p>重新生成文件，并启动服务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再刷新浏览器可以看到崭新的页面：，如果没有变化ctrl+F5强制刷新</p><h3 id="9-配置本地SSH-Key"><a href="#9-配置本地SSH-Key" class="headerlink" title="9.配置本地SSH Key"></a>9.配置本地SSH Key</h3><p>生成新的SSH Key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"your_email@youremail.com"</span><span class="token comment"># "your_email@youremail.com"为可更改注释</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>按回车键后，会提示您输入保存文件的路径。默认情况下，它会保存在 C:\Users\YourUsername.ssh\id_rsa。您可以直接按回车键使用默认路径。</p><p>再打开生成的公钥.pub 将内容复制到Github上去，或者输入下面命令获得刚刚生成的SSH Key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> ~/.ssh/id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="10-把生成的SSH-Key添加到github"><a href="#10-把生成的SSH-Key添加到github" class="headerlink" title="10.把生成的SSH Key添加到github"></a>10.把生成的SSH Key添加到github</h3><p>Github账户，找到 <code>settings ---&gt; SSH and GPG keys</code>。new 一个新的SSH Key，并把刚刚生成的本地SSH Key复制进去</p><h3 id="11-安装-hexo-deployer-git-部署插件"><a href="#11-安装-hexo-deployer-git-部署插件" class="headerlink" title="11.安装 hexo-deployer-git 部署插件"></a>11.安装 hexo-deployer-git 部署插件</h3><p>在根目录下执行(不是git bash里)：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="12-Github新建一个仓库-Create-a-new-repository"><a href="#12-Github新建一个仓库-Create-a-new-repository" class="headerlink" title="12.Github新建一个仓库(Create a new repository)"></a>12.Github新建一个仓库(Create a new repository)</h3><p>在Github新建一个仓库，仓库名例如1234，创建后会得到SSH值为 <a href="mailto:git@github.com">git@github.com</a>:likuan123/1234.git</p><h4 id="13-修改-config-yml"><a href="#13-修改-config-yml" class="headerlink" title="13.修改_config.yml"></a>13.修改_config.yml</h4><p>blog目录中的<code>_config.yml</code> 文件的deploy项需要修改：<br>初始为</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  type<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>增加或修改repo为 SSH值和branch: master,冒号后有空格，代码如下</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># Deployment</span><span class="token comment">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>likuan123/1234.git  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存修改</p><h4 id="14-部署到Github"><a href="#14-部署到Github" class="headerlink" title="14.部署到Github"></a>14.部署到Github</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo chexo g<span class="token comment"># 部署到服务上</span>hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意，如果出现无法上传，根据报错内容，主要有2个原因：<br>1.22端口被封，此时把repo的值改为GitHub上的http值，再不行改端口映射<br>2.secret问题，点击报错链接，在跳转的页面选择其中某一项，关闭即可</p><p>然后再重新输入上方代码即可</p><h3 id="15-尝试访问Github-Pages"><a href="#15-尝试访问Github-Pages" class="headerlink" title="15.尝试访问Github Pages"></a>15.尝试访问Github Pages</h3><p>浏览器输入：<a href="https://likuan123.github.io/1234%EF%BC%8C(%E5%8F%AF%E8%83%BD%E9%9C%80%E8%A6%81%E7%BF%BB%E5%A2%99)%EF%BC%8C%E5%8D%B3%E5%8F%AF%E5%87%BA%E7%8E%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E4%BA%86">https://likuan123.github.io/1234，(可能需要翻墙)，即可出现自己的博客了</a></p><h3 id="16-GitHub-Pages-网址到个人域名解析-墙内建议"><a href="#16-GitHub-Pages-网址到个人域名解析-墙内建议" class="headerlink" title="16.GitHub Pages 网址到个人域名解析(墙内建议)"></a>16.GitHub Pages 网址到个人域名解析(墙内建议)</h3><p>1.在Github 1234项目 的Settings – pages – Custom domain –输入自己的二级域名例如1234.akuan.win</p><p>2.在域名托管网站，如cloudflare，DNS记录里，新建一个CNAME，名称1234，内容likuan123.github.io，保存</p><p>等几分钟既可以通过1234.akuan.win访问博客了</p><h3 id="保存代码-可选"><a href="#保存代码-可选" class="headerlink" title="保存代码(可选)"></a>保存代码(可选)</h3><p>将本地主目录推送到远程其他分支，保存代码。</p><p>因为发布的分支选的是master，所以每次发布都会影响，所以我们选择将所有的代码上传到其他分支。</p><p>比如我们新建一个分支 prd，以后都在prd分支上修改，新建文章，发布的时候会发布到master分支上，这样一来，编写与发布互不干扰了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;大概流程：通过安装node-js-git-hexo博客框架-github-ssh密钥，github代码仓，在GitHub-pages上搭建个人博客-以下以windows为例&quot;&gt;&lt;a href=&quot;#大概流程：通过安装node-js-git-hexo博客框架-gith</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://hexo.akuan.win/2024/05/25/hello-world/"/>
    <id>http://hexo.akuan.win/2024/05/25/hello-world/</id>
    <published>2024-05-25T07:01:01.715Z</published>
    <updated>2024-05-25T07:01:01.715Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
